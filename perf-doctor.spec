# -*- mode: python ; coding: utf-8 -*-


a = Analysis(
    ['main.py'],
    pathex=[],
    binaries=[],
    datas=[
        ('src', 'src'),
        ('templates', 'templates'),
        ('tests', 'tests'),
    ],
    hiddenimports=[
        'src.core',
        'src.core.config',
        'src.core.exceptions',
        'src.core.types',
        'src.infrastructure',
        'src.infrastructure.chrome',
        'src.infrastructure.chrome.manager',
        'src.infrastructure.chrome.process',
        'src.infrastructure.devtools',
        'src.infrastructure.devtools.client',
        'src.infrastructure.devtools.commands',
        'src.infrastructure.devtools.events',
        'src.collectors',
        'src.collectors.base',
        'src.collectors.base.collector',
        'src.collectors.base.manager',
        'src.collectors.performance',
        'src.collectors.performance.paint',
        'src.collectors.performance.fcp',
        'src.collectors.performance.lcp',
        'src.collectors.performance.navigation',
        'src.collectors.performance.memory',
        'src.collectors.performance.metrics',
        'src.collectors.network',
        'src.collectors.network.collector',
        'src.analysis',
        'src.analysis.performance',
        'src.analysis.performance.analyzer',
        'src.analysis.performance.metrics',
        'src.analysis.performance.recommendations',
        'src.analysis.network',
        'src.analysis.network.analyzer',
        'src.analysis.network.reporter',
        'src.reporting',
        'src.reporting.base',
        'src.reporting.base.generator',
        'src.reporting.base.formatter',
        'src.reporting.html',
        'src.reporting.html.generator',
        'src.reporting.html.templates',
        'src.reporting.json',
        'src.reporting.json.generator',
        'src.services',
        'src.services.performance_service',
        'websockets',
        'psutil',
        'requests',
        'jinja2',
        'asyncio',
        'json',
        'logging',
        'typing',
        'dataclasses',
        'pathlib',
        'tempfile',
        'shutil',
        'platform',
        'subprocess',
        'time',
        'datetime',
    ],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[
        'tkinter',
        'matplotlib',
        'numpy',
        'pandas',
        'scipy',
        'PIL',
        'cv2',
        'torch',
        'tensorflow',
    ],
    noarchive=False,
    optimize=0,
)
pyz = PYZ(a.pure)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.datas,
    [],
    name='perf-doctor',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=True,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
)
